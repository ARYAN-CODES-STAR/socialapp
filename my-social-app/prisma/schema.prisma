datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:lIFbY2dQLc0C@ep-old-sea-a5d1eg1f.us-east-2.aws.neon.tech/neondb?sslmode=require"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  image         String?
  posts         Post[]
  comments      Comment[]
  followers     Follow[]  @relation("Following")
  following     Follow[]  @relation("Followers")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Post {
  id          String    @id @default(uuid())
  content     String
  imageUrl    String?
  authorId    String
  comments    Comment[]
  author      User      @relation(fields: [authorId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id          String    @id @default(uuid())
  content     String
  postId      String
  post        Post      @relation(fields: [postId], references: [id])
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  parentId    String?
  parent      Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies     Comment[] @relation("CommentReplies")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Follow {
  id          String    @id @default(uuid())
  followerId  String
  followingId String
  follower    User      @relation("Following", fields: [followerId], references: [id])
  following   User      @relation("Followers", fields: [followingId], references: [id])
  createdAt   DateTime  @default(now())

  @@unique([followerId, followingId])
}